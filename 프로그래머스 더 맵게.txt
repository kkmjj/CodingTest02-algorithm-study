import java.util.*;

/*
  PriorityQueue<Integer> prq = new PriorityQueue<Integer>();
  
  PriorityQueue는 넣는 순서와 상관 없이 
  값의 작은 숫자 대로 추출 해준다. 


문제 설명


매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다.

섞은 음식의 스코빌 지수 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째로 맵지 않은 음식의 스코빌 지수 * 2)


Leo는 모든 음식의 스코빌 지수가 K 이상이 될 때까지 반복하여 섞습니다.
Leo가 가진 음식의 스코빌 지수를 담은 배열 scoville과 원하는 스코빌 지수 K가 주어질 때, 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 섞어야 하는 최소 횟수를 return 하도록 solution 함수를 작성해주세요.

  
 */
public class Main {

	public static void main(String[] args) {
		 int[] scoville= {1};
		 int K=5;
		 int answer=0;
		 
		 PriorityQueue<Integer> q =new PriorityQueue<Integer>();
		 
		 for(int a : scoville)
		 {
			 q.offer(a);
		 }
	     System.out.println(q);

	       int min=0;
	       int smin=0;
	       int number=0;
	       int length=q.size();
	       
	       
	       while (q.peek() <= K) {
	            if (q.size() == 1) {
	                break;
	            }
	            int a = q.poll();
	            int b = q.poll();


	            int result = a + (b * 2);

	            q.offer(result);
	            answer ++;
	        }
		 
		 
		 
	      System.out.print(answer);
	        
	        
	        
	}

}
